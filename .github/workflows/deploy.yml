  deploy:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Deploy code to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: ${{ secrets.EC2_PORT }}
          script: |
            # Export AWS credentials (required if EC2 doesn't have an IAM role)
            export AWS_ACCESS_KEY_ID=${{ secrets.AWS_ACCESS_KEY_ID }}
            export AWS_SECRET_ACCESS_KEY=${{ secrets.AWS_SECRET_ACCESS_KEY }}
            export AWS_DEFAULT_REGION=ap-southeast-1

            # Verify identity (debug)
            aws sts get-caller-identity

            # Login to ECR
            aws ecr get-login-password --region ap-southeast-1 \
              | docker login --username AWS --password-stdin 879602785537.dkr.ecr.ap-southeast-1.amazonaws.com

            # Pull the latest image
            sudo docker pull 879602785537.dkr.ecr.ap-southeast-1.amazonaws.com/argo-repo:latest

            # Stop and remove old container if exists
            sudo docker stop frontend || true
            sudo docker rm frontend || true

            # Run new container
            sudo docker run -d --name frontend -p 3000:3000 879602785537.dkr.ecr.ap-southeast-1.amazonaws.com/argo-repo:latest
